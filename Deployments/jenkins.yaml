apiVersion: v1
kind: Namespace
metadata:
  name: jenkins

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jenkins-pv
spec:
  capacity:
    storage: 5Gi # Match the size to the EBS volume size
  accessModes:
    - ReadWriteOnce
  awsElasticBlockStore:
    volumeID: vol-05229c39a47d4ace1 # Replace with the EBS volume ID from Terraform
    fsType: ext4 # Specify the desired filesystem type

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi # Match the size to the EBS volume size
  storageClassName: ""
  volumeName: jenkins-pv

---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-service
  namespace: jenkins
spec:
  type: NodePort
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30000
  selector:
    app: jenkins-pod
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins-deployment
  namespace: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins-pod
  template:
    metadata:
      labels:
        app: jenkins-pod
    spec:
      initContainers:
        - name: docker-init
          image: docker:latest
          command: ["sh", "-c", "cp /usr/local/bin/docker /data/"]
          volumeMounts:
            - name: docker
              mountPath: /data
        - name: kubectl-init
          image: bitnami/kubectl:latest
          command: ["sh", "-c", "cp /opt/bitnami/kubectl/bin/kubectl /data/"]
          volumeMounts:
            - name: kubectl
              mountPath: /data
      containers:
        - name: jenkins
          image: jenkins/jenkins:lts
          resources:
            limits:
              cpu: "2"
              memory: "2Gi"
            requests:
              cpu: "1"
              memory: "0.5Gi"
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          volumeMounts:
            - name: jenkins-data
              mountPath: /var/jenkins_home
            - name: docker
              subPath: docker
              mountPath: /usr/local/bin/docker
            - name: docker-socket
              mountPath: /var/run/docker.sock
            - name: kubectl
              subPath: kubectl
              mountPath: /usr/local/bin/kubectl
      volumes:
        - name: jenkins-data
          persistentVolumeClaim:
            claimName: jenkins-pvc
        - name: docker
          emptyDir: {}
        - name: kubectl
          emptyDir: {}
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
